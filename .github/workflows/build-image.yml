name: Build and Publish Azure Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Packer
      uses: hashicorp/setup-packer@v2
      with:
        version: '1.7.8'

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}
        
    - name: Create Resource Group (if not exists)
      id: create_rg
      run: |
        if ! az group show --name myResourceGroup &> /dev/null; then
          az group create --name myResourceGroup --location eastus
        else
          echo "Resource group myResourceGroup already exists"
        fi
        
    - name: Validate Packer Build
      env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd cloud_image_builder
        packer init .
        packer validate ubuntu_docker.pkr.hcl

    - name: Run Packer Build
      env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd cloud_image_builder
        packer init .
        packer build -var "azure_client_id=${{ secrets.ARM_CLIENT_ID }}" -var "azure_client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -var "azure_subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var "azure_tenant_id=${{ secrets.ARM_TENANT_ID }}" ubuntu_docker.pkr.hcl

    - name: Publish Managed Image to Azure
      run: echo "Image creation successful"
